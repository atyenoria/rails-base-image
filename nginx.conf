user root;
worker_processes auto;
pid /run/nginx.pid;
daemon off;

events {
    worker_connections 768;
    # multi_accept on;
}



http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 2;
    client_max_body_size 100m;
    types_hash_max_size 2048;
    # server_tokens off;


    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    error_log /dev/stdout debug;
    access_log /dev/stdout;


    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";


    # open_file_cache          max=1000 inactive=20s;
    # open_file_cache_valid    60s;
    # open_file_cache_min_uses 1;
    # open_file_cache_errors   on;


    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##

    # include /etc/nginx/conf.d/*.conf;
    # include /etc/nginx/sites-available/*;

 upstream unicorn_server {
  server unix:/tmp/unicorn.sock fail_timeout=0;
}

server {
  listen 80;
  server_name l.com;

  root /app/sample/public;
  try_files $uri @unicorn_server;

  location @unicorn_server {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    #proxy_set_header X-Forwarded-Proto https; # if use ssl
    proxy_redirect off;
    proxy_pass http://unicorn_server;
  }

  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";

    open_file_cache max=1000 inactive=500s;
    open_file_cache_valid 600s;
    open_file_cache_errors on;
    break;
  }

}
}



